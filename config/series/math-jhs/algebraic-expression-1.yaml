sampleTex: 'x^{2} + 5x - 8 | _{x = 2} = 6'
mth:
  generators:
    z:
      expressions:
        - template: Restrict (Add (Mul .a0 (Pow 'x' 2)) (Mul .a1 'x') .a2) (Equal 'x' .a3); Restrict (Add .a2 (Mul .a1 'x') (Mul .a0 (Pow 'x' 2))) (Equal 'x' .a3)
          calcs: add (mul .a0 .a3 .a3) (mul .a1 .a3) .a2
          constraints:
            - var: a0
              min: -3
              max: 3
              excepts: 0
            - var: a1
              min: -5
              max: 5
              excepts: 0
            - var: a2
              min: -7
              max: 7
              excepts: 0
            - var: a3
              min: -6
              max: 6
              excepts: 0
        - template: Add (Mul .b0 (Pow .b3 2)) (Mul .b1 .b3) .b2; Add .b2 (Mul .b1 .b3) (Mul .b0 (Pow .b3 2))
          calcs: add (mul .b0 .b3 .b3) (mul .b1 .b3) .b2
          wrongCals: add 1 $cal; add -1 $cal; $vars; 1; 2; 3
          constraints:
            - var: b0
              cal: .a0
            - var: b1
              cal: .a1
            - var: b2
              cal: .a2
            - var: b3
              cal: .a3
              wrongCals: ''
        - template: Add (Times .c0 .c3) .c1 .c2; Add .c2 .c1 (Times .c0 .c3)
          calcs: add (mul .c0 .c3) .c1 .c2
          wrongCals: add 1 $cal; add -1 $cal; $vars; 1; 2; 3
          constraints:
            - var: c0
              cal: .b0
            - var: c1
              cal: mul .b1 .b3
            - var: c2
              cal: .b2
            - var: c3
              cal: mul .b3 .b3
        - template: Add .d0 .d1 .d2; Add .d2 .d1 .d0
          calcs: add .d0 .d1 .d2
          wrongCals: add 1 $cal; add -1 $cal; $vars; 1; 2; 3
          constraints:
            - var: d0
              cal: mul .c0 .c3
            - var: d1
              cal: .c1
            - var: d2
              cal: .c2
        - template: .e0
          calcs: .e0
          wrongCals: add 1 $cal; add -1 $cal; $vars; 1; 2; 3
          constraints:
            - var: e0
              cal: add .d0 .d1 .d2
    w:
      expressions:
        - template: Restrict (Add (Mul .a1 'x') .a2) (Equal 'x' .a3); Restrict (Add .a2 (Mul .a1 'x')) (Equal 'x' .a3)
          calcs: add (mul .a1 .a3) .a2
          constraints:
            - var: a1
              min: -5
              max: 5
              excepts: 0
            - var: a2
              min: -7
              max: 7
              excepts: 0
            - var: a3
              min: -6
              max: 6
              excepts: 0
        - template: Add (Mul .b1 .b3) .b2; Add .b2 (Mul .b1 .b3)
          calcs: add (mul .b1 .b3) .b2
          wrongCals: add 1 $cal; add -1 $cal; $vars; 1; 2; 3
          constraints:
            - var: b1
              cal: .a1
            - var: b2
              cal: .a2
            - var: b3
              cal: .a3
              wrongCals: ''
        - template: Add .c1 .c2; Add .c2 .c1
          calcs: add .c1 .c2
          wrongCals: add 1 $cal; add -1 $cal; $vars; 1; 2; 3
          constraints:
            - var: c1
              cal: mul .b1 .b3
            - var: c2
              cal: .b2
        - template: .d0
          calcs: .d0
          wrongCals: add 1 $cal; add -1 $cal; $vars; 1; 2; 3
          constraints:
            - var: d0
              cal: add .c1 .c2
